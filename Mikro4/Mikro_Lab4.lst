CCS PCH C Compiler, Version 5.015, 5967               10-Ara-20 21:35

               Filename:   C:\Users\ASUS\Desktop\Mikro4\Mikro_Lab4.lst

               ROM used:   302 bytes (1%)
                           Largest free fragment is 32462
               RAM used:   24 (2%) at main() level
                           25 (2%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   00EE
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   00B6
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <Mikro_Lab4.h> 
.................... #include <18F45K22.h> 
.................... //////////// Standard Header file for the PIC18F45K22 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F45K22 
0096:  CLRF   FF7
0098:  ADDLW  A6
009A:  MOVWF  FF6
009C:  MOVLW  00
009E:  ADDWFC FF7,F
00A0:  TBLRD*+
00A2:  MOVF   FF5,W
00A4:  RETURN 0
00A6:  DATA 06,4F
00A8:  DATA 6D,07
00AA:  DATA 6F,3F
00AC:  DATA 5B,66
00AE:  DATA 7D,7F
00B0:  DATA 77,39
00B2:  DATA 79,71
00B4:  DATA 1E,00
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
....................  
....................  
....................  
.................... #use delay(crystal=4000000) 
.................... //#use fast_io(c) 
....................  
.................... const int ekran[15]={0b00000110,0b01001111,0b01101101,0b00000111,0b01101111, 
....................                      0b00111111,0b01011011,0b01100110,0b01111101,0b01111111, 
....................                      0b01110111,0b00111001,0b01111001,0b01110001,0b00011110}; 
....................  
....................  
.................... //const int tekler[5]={0b00000110,0b01001111,0b01101101,0b00000111,0b01101111}; 
.................... //const int ciftler[5]={0b00111111,0b01011011,0b01100110,0b01111101,0b01111111}; 
.................... //const int harfler[5]={0b01110111,0b00111001,0b01111001,0b01110001,0b00011110}; 
.................... int i=0; 
.................... int sayac=0; 
....................  
.................... #int_timer0 
.................... void timer0_kesme() 
.................... { 
....................    set_timer0(131); 
00B6:  CLRF   FD7
00B8:  MOVLW  83
00BA:  MOVWF  FD6
....................     
....................    sayac+=1; 
00BC:  MOVLW  01
00BE:  ADDWF  17,F
....................    if(sayac==125) 
00C0:  MOVF   17,W
00C2:  SUBLW  7D
00C4:  BNZ   00E8
....................    { 
....................       
....................      output_c(ekran[i]); 
00C6:  CLRF   03
00C8:  MOVF   16,W
00CA:  MOVFF  FF2,18
00CE:  BCF    FF2.7
00D0:  RCALL  0096
00D2:  BTFSC  18.7
00D4:  BSF    FF2.7
00D6:  CLRF   F94
00D8:  MOVWF  F8B
....................      i+=1; 
00DA:  MOVLW  01
00DC:  ADDWF  16,F
....................      if(i==15) i=0; 
00DE:  MOVF   16,W
00E0:  SUBLW  0F
00E2:  BNZ   00E6
00E4:  CLRF   16
....................      sayac=0; 
00E6:  CLRF   17
....................    } 
....................     
....................     
00E8:  BCF    FF2.2
00EA:  GOTO   0054
.................... } 
.................... void main() 
00EE:  CLRF   FF8
00F0:  BCF    FD0.7
00F2:  BSF    07.7
00F4:  CLRF   16
00F6:  CLRF   17
00F8:  MOVF   FC1,W
00FA:  ANDLW  F0
00FC:  MOVWF  FC1
00FE:  MOVLW  00
0100:  MOVLB  F
0102:  MOVWF  x38
0104:  MOVWF  x3C
0106:  MOVWF  x39
0108:  MOVWF  x3A
010A:  MOVWF  x3B
010C:  MOVLB  1
010E:  CLRF   x88
0110:  CLRF   F77
0112:  CLRF   F78
0114:  CLRF   F79
.................... { 
....................    set_tris_c(0x00); 
0116:  MOVLW  00
0118:  MOVWF  F94
....................    output_c(0x00); 
011A:  CLRF   F94
011C:  CLRF   F8B
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_128 | RTCC_8_bit); 
011E:  MOVLW  C6
0120:  MOVWF  FD5
....................    set_timer0(131); 
0122:  CLRF   FD7
0124:  MOVLW  83
0126:  MOVWF  FD6
....................    enable_interrupts(int_timer0); 
0128:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
012A:  MOVLW  C0
012C:  IORWF  FF2,F
....................  
.................... while(TRUE); 
012E:  BRA    012E
.................... } 
0130:  SLEEP 

Configuration Fuses:
   Word  1: E100   XT NOPLLEN PRIMARY_ON FCMEN IESO
   Word  2: 1C18   PUT NOBROWNOUT BORV19 NOWDT WDT128
   Word  3: BF00   CCP2C1 PBADEN CCP3B5 HFOFST TIMER3C0 CCP2D2 MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
