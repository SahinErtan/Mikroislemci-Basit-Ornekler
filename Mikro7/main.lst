CCS PCH C Compiler, Version 5.015, 5967               11-Oca-21 23:29

               Filename:   C:\Users\ASUS\Desktop\Uzaktan Eðitim\Mikroiþlemci Tabanlý Sistem Tasarýmý\Lab Uygulamalar\MikroSon\main.lst

               ROM used:   456 bytes (1%)
                           Largest free fragment is 32308
               RAM used:   28 (2%) at main() level
                           33 (2%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 31

*
0000:  GOTO   0132
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.5
004A:  GOTO   0054
004E:  BTFSC  FF2.2
0050:  GOTO   00DA
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... #include <main.h> 
.................... #include <18F45K22.h> 
.................... //////////// Standard Header file for the PIC18F45K22 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F45K22 
0096:  CLRF   01
0098:  CLRF   02
009A:  CLRF   00
009C:  CLRF   03
009E:  MOVF   1F,W
00A0:  BNZ   00A6
00A2:  MOVF   1E,W
00A4:  BZ    00D6
00A6:  MOVLW  10
00A8:  MOVWF  20
00AA:  BCF    FD8.0
00AC:  RLCF   1C,F
00AE:  RLCF   1D,F
00B0:  RLCF   00,F
00B2:  RLCF   03,F
00B4:  MOVF   1F,W
00B6:  SUBWF  03,W
00B8:  BNZ   00BE
00BA:  MOVF   1E,W
00BC:  SUBWF  00,W
00BE:  BNC   00CE
00C0:  MOVF   1E,W
00C2:  SUBWF  00,F
00C4:  BTFSS  FD8.0
00C6:  DECF   03,F
00C8:  MOVF   1F,W
00CA:  SUBWF  03,F
00CC:  BSF    FD8.0
00CE:  RLCF   01,F
00D0:  RLCF   02,F
00D2:  DECFSZ 20,F
00D4:  BRA    00AA
00D6:  GOTO   0110 (RETURN)
....................  
.................... #list 
....................  
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
....................  
....................  
....................  
....................  
.................... #device ADC=10 
.................... #use delay(crystal=800000) //Timer1 için 50Hz degerine ulasabilmek için 800KHz 
....................  
.................... int16 analog; //1024'e kadar deger kullanilacagindan int16 tanimlanmistir. 
.................... int16 deger;   
....................  
.................... int i=0; 
.................... int j=0; 
....................  
.................... #int_timer0 
.................... void kesme() 
.................... { 
....................    set_timer0(6);  //Timer0 Kesmesi tekrar kuruluyor. 
00DA:  CLRF   FD7
00DC:  MOVLW  06
00DE:  MOVWF  FD6
....................    /* 
....................    TMR0=6 icin 5x4x250 = 5ms kesme olusuyor. 
....................    1.5 saniye icin 300 dongu gerektiginden  
....................    */ 
....................    i++; 
00E0:  INCF   1A,F
....................    if(i==20) //20 
00E2:  MOVF   1A,W
00E4:  SUBLW  14
00E6:  BNZ   00EC
....................    { 
....................       i=0;  //i degeri 20'ye ulastigi icin sifirlaniyor 
00E8:  CLRF   1A
....................       j++; 
00EA:  INCF   1B,F
....................    } 
....................    if(j==15) //i ve j deðeri 20x15 olaraktan 300 tekrar sagliyor 
00EC:  MOVF   1B,W
00EE:  SUBLW  0F
00F0:  BNZ   012C
....................    { 
....................       analog=read_adc(); 
00F2:  BSF    FC2.1
00F4:  BTFSC  FC2.1
00F6:  BRA    00F4
00F8:  MOVFF  FC3,16
00FC:  MOVFF  FC4,17
....................       deger=analog/72;  //Potansiyometreden Gelen 1024 deðer 14 farklý deger icin bolmelendiriliyor 
0100:  MOVFF  17,1D
0104:  MOVFF  16,1C
0108:  CLRF   1F
010A:  MOVLW  48
010C:  MOVWF  1E
010E:  BRA    0096
0110:  MOVFF  02,19
0114:  MOVFF  01,18
....................       set_pwm1_duty((int)(deger+12)); //PWM Duty int deger ile calýsýyor ve 1ms 12 degerine karsýlýk geliyor. 
0118:  MOVLW  0C
011A:  ADDWF  18,W
011C:  MOVWF  01
011E:  MOVLW  00
0120:  ADDWFC 19,W
0122:  MOVFF  01,FBE
....................       j=0;  //j degeri 15 e ulastigi icin sifirlaniyor i zaten sifirlanmisti bu asamada 
0126:  CLRF   1B
....................       output_toggle(pin_c7);  //Kesmenin ani görülebilsin diye bir led tanimlandi. 
0128:  BCF    F94.7
012A:  BTG    F8B.7
....................  
....................    } 
....................  
012C:  BCF    FF2.2
012E:  GOTO   0054
.................... } 
....................  
.................... void main() 
0132:  CLRF   FF8
0134:  BCF    FD0.7
0136:  BSF    07.7
0138:  CLRF   1A
013A:  CLRF   1B
013C:  MOVF   FC1,W
013E:  ANDLW  F0
0140:  MOVWF  FC1
0142:  MOVLW  00
0144:  MOVLB  F
0146:  MOVWF  x38
0148:  MOVWF  x3C
014A:  MOVWF  x39
014C:  MOVWF  x3A
014E:  MOVWF  x3B
0150:  MOVLB  1
0152:  CLRF   x88
0154:  CLRF   F77
0156:  CLRF   F78
0158:  CLRF   F79
.................... { 
....................  
....................    set_tris_c(0x00);  //C pinleri cikis olarak ayarlaniyor 
015A:  MOVLW  00
015C:  MOVWF  F94
....................    output_c(0x00);  //C pin cikislari sifirlaniyor 
015E:  CLRF   F94
0160:  CLRF   F8B
....................  
....................     
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_4 | RTCC_8_bit); //8 bit icin 4 Prescaler degerli timer0 kuruldu 
0162:  MOVLW  C1
0164:  MOVWF  FD5
....................    set_timer0(6); // 5x4x300x(256-6)=1.5ms 
0166:  CLRF   FD7
0168:  MOVLW  06
016A:  MOVWF  FD6
....................     
....................    setup_timer_2(T2_DIV_BY_16,250,1); // 16 Pre ve 1 Postscale ile timer2 kuruldu, Motor icin 50Hz frekans degeri TMR1=250 deðeri ile elde edildi 
016C:  MOVLW  00
016E:  IORLW  06
0170:  MOVWF  FBA
0172:  MOVLW  FA
0174:  MOVWF  FBB
....................    setup_ccp1(CCP_PWM);  
0176:  BCF    F94.2
0178:  BCF    F8B.2
017A:  MOVLW  0C
017C:  MOVWF  FBD
017E:  CLRF   FB7
0180:  CLRF   FB6
0182:  MOVLW  01
0184:  MOVWF  FB9
0186:  MOVLW  FC
0188:  MOVLB  F
018A:  ANDWF  x49,F
018C:  MOVLW  00
018E:  IORWF  x49,F
....................    set_pwm1_duty(12);  //Baslangicta pwm'in duty degeri motorun -90 derece olmasi icin ayarlanmistir. 
0190:  MOVLW  0C
0192:  MOVWF  FBE
....................     
....................     
....................    setup_adc(ADC_CLOCK_DIV_16); 
0194:  MOVF   FC0,W
0196:  ANDLW  C0
0198:  IORLW  05
019A:  MOVWF  FC0
019C:  BSF    FC0.7
019E:  BSF    FC2.0
....................    setup_adc_ports(sAN0); //AN0 kanali analog giris ayarlandi 
01A0:  MOVF   FC1,W
01A2:  ANDLW  F0
01A4:  MOVWF  FC1
01A6:  MOVLW  01
01A8:  MOVWF  x38
01AA:  MOVLW  00
01AC:  MOVWF  x3C
01AE:  MOVWF  x39
01B0:  MOVWF  x3A
01B2:  MOVWF  x3B
....................    set_adc_channel(0); //ADC'nin okuyacagi kanal AN0 ayarlandi. 
01B4:  MOVWF  01
01B6:  MOVF   FC2,W
01B8:  ANDLW  83
01BA:  IORWF  01,W
01BC:  MOVWF  FC2
....................    delay_us(20);  
01BE:  BRA    01C0
01C0:  BRA    01C2
....................     
....................    enable_interrupts(int_timer0); //Timer0 Kesmesi Aktif Edildi 
01C2:  BSF    FF2.5
....................    enable_interrupts(GLOBAL);  //Tüm Kesmeler Aktif Edildi 
01C4:  MOVLW  C0
01C6:  IORWF  FF2,F
....................     
....................  
....................    while(TRUE) 
....................    { 
01C8:  BRA    01C8
....................        //Burada Ýslem Yapilmiyor Programin Calismaya Devam Etmesi Ýcin Bos Birakilmistir 
....................    } 
....................  
.................... } 
01CA:  SLEEP 

Configuration Fuses:
   Word  1: E100   XT NOPLLEN PRIMARY_ON FCMEN IESO
   Word  2: 1C18   PUT NOBROWNOUT BORV19 NOWDT WDT128
   Word  3: BF00   CCP2C1 PBADEN CCP3B5 HFOFST TIMER3C0 CCP2D2 MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
